{"version":3,"file":"static/js/home-view.7f5a1af5.chunk.js","mappings":"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","sources":["hooks/usePagination.jsx","components/CardCourse/CardCourse.styled.jsx","components/Skills/Skills.styled.jsx","components/Skills/Skills.jsx","components/CardCourse/CardCourse.jsx","components/CourseList/CourseList.styled.jsx","components/CourseList/CourseList.jsx","components/Pagination/Pagination.styled.jsx","components/Pagination/Pagination.jsx","components/page/HomePage/HomePage.jsx","services/fetchCourses.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst usePagination = ({ contentPerPage, count }) => {\n  const [page, setPage] = useState(1);\n  // like 3 dots that surrounds the immediate pages\n  const [gaps, setGaps] = useState({\n    before: false,\n    paginationGroup: [],\n    after: true,\n  });\n  // number of pages in total (total items / content on each page)\n  const pageCount = Math.ceil(count / contentPerPage);\n  // index of last item of current page\n  const lastContentIndex = page * contentPerPage;\n  // index of first item of current page\n  const firstContentIndex = lastContentIndex - contentPerPage;\n  //Pages between the first and last pages\n  const [pagesInBetween, setPagesInBetween] = useState([]);\n\n  useEffect(() => {\n    if (pageCount > 2) {\n      const temp = new Array(pageCount - 2).fill(1).map((_, i) => i + 2);\n      setPagesInBetween(temp);\n    }\n  }, [pageCount]);\n\n  // to set the pages between the gaps depending on position of current page\n  //and to setGaps Depending on position of current page\n  useEffect(() => {\n    const currentLocation = pagesInBetween.indexOf(page);\n    let paginationGroup = [];\n    let before = false;\n    let after = false;\n    if (page === 1) {\n      paginationGroup = pagesInBetween.slice(0, 3);\n    } else if (\n      page === pageCount ||\n      page === pageCount - 1 ||\n      page === pageCount - 2\n    ) {\n      paginationGroup = pagesInBetween.slice(-3, pageCount);\n    } else if (page === 2) {\n      paginationGroup = pagesInBetween.slice(\n        currentLocation,\n        currentLocation + 3\n      );\n    } else {\n      paginationGroup = [page - 1, page, page + 1];\n    }\n    if (pageCount <= 5) {\n      before = false;\n      after = false;\n    } else {\n      before = false;\n      after = false;\n      if (paginationGroup[0] > 2) {\n        before = true;\n      }\n      if (paginationGroup[2] < pageCount - 1) {\n        after = true;\n      }\n    }\n    setGaps({ paginationGroup, before, after });\n  }, [page, pagesInBetween, pageCount]);\n\n  // change page based on direction either front or back\n  const changePage = (direction) => {\n    setPage((state) => {\n      // move forward\n      if (direction) {\n        // if page is the last page, do nothing\n        if (state === pageCount) {\n          return state;\n        }\n        return state + 1;\n        // go back\n      } else {\n        // if page is the first page, do nothing\n        if (state === 1) {\n          return state;\n        }\n        return state - 1;\n      }\n    });\n  };\n\n  const setPageSAFE = (num) => {\n    // if number is greater than number of pages, set to last page\n    if (num > pageCount) {\n      setPage(pageCount);\n      // if number is less than 1, set page to first page\n    } else if (num < 1) {\n      setPage(1);\n    } else {\n      setPage(num);\n    }\n  };\n\n  return {\n    totalPages: pageCount,\n    nextPage: () => changePage(true),\n    prevPage: () => changePage(false),\n    setPage: setPageSAFE,\n    firstContentIndex,\n    lastContentIndex,\n    page,\n    gaps,\n  };\n};\n\nexport default usePagination;\n","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const ItemLink = styled(Link)`\n  text-decoration: none;\n  color: #fff;\n`;\n\nexport const Item = styled.li`\n  position: relative;\n  overflow: hidden;\n  border-radius: 10px;\n  border: 1px solid #828181;\n  box-shadow: 0px 0px 5px 0px rgba(255, 255, 255, 0.75);\n  background-color: #9a8f8f;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    transform: scale(1.02);\n  }\n\n  @media screen and (max-width: 480px) {\n    width: 80%;\n  }\n`;\n\nexport const MetaWrapper = styled.div`\n  padding: 10px;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 8px;\n  font-size: 14px;\n`;\n\nexport const PreTitle = styled.p`\n  font-size: 12px;\n  margin-bottom: 8px;\n`;\n\nexport const Image = styled.img`\n  display: block;\n  max-width: 100%;\n`;\n\nexport const Rating = styled.p`\n  position: absolute;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  top: 5px;\n  right: 5px;\n  border-radius: 50%;\n  width: 40px;\n  height: 40px;\n  background-color: ${(props) => (props.value >= 4 ? \"#138000\" : \"#FDD700\")};\n  color: #fff;\n  font-size: 16px;\n`;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Title = styled.h2`\n  font-size: 16px;\n  margin-bottom: 10px;\n`;\n\nexport const List = styled.ul`\n  margin-left: 15px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Item = styled.span`\n  font-size: 14px;\n`;\n","import { Title, List, Container, Item } from \"./Skills.styled\";\nimport PropTypes from \"prop-types\";\n\nexport const Skills = ({ meta }) => {\n  const { skills } = meta;\n  return (\n    <Container>\n      <Title>Skills</Title>\n      <List>\n        {skills &&\n          skills.map((el, index) => (\n            <li key={index}>\n              <Item>{el}</Item>\n            </li>\n          ))}\n      </List>\n    </Container>\n  );\n};\n\nSkills.propTypes = {\n  meta: PropTypes.shape({\n    skills: PropTypes.arrayOf(PropTypes.string),\n  }),\n};\n","import {\n  PreTitle,\n  Item,\n  Title,\n  MetaWrapper,\n  Rating,\n  Image,\n} from \"./CardCourse.styled\";\nimport PropTypes from \"prop-types\";\nimport { useLocation } from \"react-router-dom\";\nimport { ItemLink } from \"../CardCourse/CardCourse.styled\";\nimport { Skills } from \"../Skills/Skills\";\n\nconst CardCourse = ({ itemData }) => {\n  const location = useLocation();\n  const { previewImageLink, title, lessonsCount, rating, id, meta } = itemData;\n\n  return (\n    <>\n      <Item>\n        <ItemLink to={`${id}`} state={{ from: location }}>\n          <Image\n            src={\n              previewImageLink\n                ? `${previewImageLink}/cover.webp`\n                : `https://upload.wikimedia.org/wikipedia/commons/f/fc/No_picture_available.png`\n            }\n            alt=\"\"\n          />\n          <MetaWrapper>\n            <Title>{title}</Title>\n            <PreTitle>This course includes {lessonsCount} lessons</PreTitle>\n            <Rating value={rating}>{rating}</Rating>\n            <Skills meta={meta} />\n          </MetaWrapper>\n        </ItemLink>\n      </Item>\n    </>\n  );\n};\n\nexport default CardCourse;\n\nCardCourse.propTypes = {\n  itemData: PropTypes.shape({\n    previewImageLink: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    lessonsCount: PropTypes.number.isRequired,\n    rating: PropTypes.number.isRequired,\n    id: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import styled from \"styled-components\";\n\nexport const List = styled.ul`\n  margin-top: 20px;\n  margin-bottom: 30px;\n  display: grid;\n  grid-template-columns: repeat(1, 1fr);\n  justify-items: center;\n  grid-gap: 1em;\n  list-style: none;\n\n  @media screen and (min-width: 768px) {\n    grid-template-columns: repeat(2, 1fr);\n    justify-items: center;\n  }\n`;\n","import CardCourse from \"../CardCourse\";\nimport { List } from \"./CourseList.styled\";\nimport PropTypes from \"prop-types\";\n\nconst CourseList = ({ data, firstContentIndex, lastContentIndex }) => {\n  return (\n    <>\n      <List>\n        {data.slice(firstContentIndex, lastContentIndex).map((el) => (\n          <CardCourse itemData={el} key={el.id} />\n        ))}\n      </List>\n    </>\n  );\n};\n\nexport default CourseList;\n\nCourseList.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      previewImageLink: PropTypes.string,\n      title: PropTypes.string.isRequired,\n      lessonsCount: PropTypes.number.isRequired,\n      rating: PropTypes.number.isRequired,\n      id: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import styled from \"styled-components\";\n\nexport const App = styled.div`\n  min-height: 100vh;\n  color: white;\n`;\n\nexport const PaginationWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 1rem;\n  margin: 1rem 0;\n`;\n\nexport const Text = styled.p`\n  opacity: 0.6;\n  font-size: 1.5rem;\n`;\n\nexport const Button = styled.button`\n  color: white;\n  height: 2rem;\n  width: 2rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: bold;\n  border: solid 0.2rem #9a8f8f;\n  background-color: transparent;\n  border-radius: 0.7rem;\n  cursor: pointer;\n  &:hover {\n    background-color: #9a8f8f;\n  }\n`;\n\nexport const ButtonActive = styled(Button)`\n  background-color: ${(props) =>\n    props.page === props.el ? \"background-color: #9a8f8f;\" : \"\"};\n`;\n\nexport const ButtonDisabled = styled(Button)`\n  background-color: transparent !important;\n  cursor: not-allowed;\n  opacity: 0.5;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport usePagination from \"hooks/usePagination\";\nimport CourseList from \"../CourseList/CourseList\";\n//add input for specific page\nimport {\n  App,\n  PaginationWrapper,\n  Text,\n  Button,\n  ButtonActive,\n  ButtonDisabled,\n} from \"./Pagination.styled\";\n\nfunction Pagination({ data }) {\n  const [people, setPeople] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const {\n    firstContentIndex,\n    lastContentIndex,\n    nextPage,\n    prevPage,\n    page,\n    gaps,\n    setPage,\n    totalPages,\n  } = usePagination({\n    contentPerPage: 10,\n    count: data.length,\n  });\n  useEffect(() => {\n    (async () => {\n      try {\n        const data = await axios.get(\n          \"https://random-data-api.com/api/users/random_user?size=100\"\n        );\n        setPeople(data.data);\n      } catch {\n        setError(true);\n      } finally {\n        setLoading(false);\n      }\n    })();\n  }, []);\n  return (\n    <App>\n      {loading ? (\n        <h2>Loading...</h2>\n      ) : error ? (\n        <h2>Error fetching users</h2>\n      ) : (\n        <>\n          <PaginationWrapper>\n            <Text>\n              {page}/{totalPages}\n            </Text>\n            {page !== 1 ? (\n              <Button onClick={prevPage}> &larr;</Button>\n            ) : (\n              <ButtonDisabled onClick={prevPage}>&larr;</ButtonDisabled>\n            )}\n            {page !== 1 ? (\n              <Button onClick={() => setPage(1)}>1</Button>\n            ) : (\n              <ButtonDisabled onClick={() => setPage(1)}>1</ButtonDisabled>\n            )}\n            {gaps.before ? \"...\" : null}\n            {/* @ts-ignore */}\n            {gaps.paginationGroup.map((el) => (\n              <ButtonActive\n                page={page}\n                el={el}\n                onClick={() => setPage(el)}\n                key={el}\n              >\n                {el}\n              </ButtonActive>\n            ))}\n            {gaps.after ? \"...\" : null}\n            {page !== totalPages ? (\n              <Button onClick={() => setPage(totalPages)}>{totalPages}</Button>\n            ) : (\n              <ButtonDisabled onClick={() => setPage(totalPages)}>\n                {totalPages}\n              </ButtonDisabled>\n            )}\n            {page !== totalPages ? (\n              <Button onClick={nextPage}>&rarr;</Button>\n            ) : (\n              <ButtonDisabled onClick={nextPage}>&rarr;</ButtonDisabled>\n            )}\n          </PaginationWrapper>\n          <CourseList\n            firstContentIndex={firstContentIndex}\n            lastContentIndex={lastContentIndex}\n            data={data}\n          />\n        </>\n      )}\n    </App>\n  );\n}\n\nexport default Pagination;\n","import { useEffect, useState } from \"react\";\nimport Pagination from \"components/Pagination/Pagination\";\nimport * as CoursesAPI from \"../../../services/fetchCourses\";\n\nconst HomePage = () => {\n  const [token, setToken] = useState(localStorage.getItem(\"token\"));\n  const [courses, setCourse] = useState([]);\n\n  useEffect(() => {\n    if (!token) {\n      CoursesAPI.fetchToken().then(setToken);\n    } else {\n      CoursesAPI.getCourses().then(setCourse);\n    }\n  }, [token]);\n\n  return <Pagination data={courses} />;\n};\n\nexport default HomePage;\n","import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://api.wisey.app/api/v1/\";\n\nexport async function fetchToken() {\n  try {\n    const { data } = await axios.get(\"auth/anonymous?platform=subscriptions\");\n    localStorage.setItem(\"token\", data.token);\n    return data.token;\n  } catch (error) {\n    console.error(\"An error occurred while fetching the token:\", error);\n    throw error;\n  }\n}\n\nexport async function getCourses() {\n  try {\n    const { data } = await axios.get(\"core/preview-courses\", {\n      headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n    });\n    return data.courses;\n  } catch (error) {\n    if (error.response) {\n      console.log(`Request failed with status code ${error.response.status}`);\n    } else if (error.request) {\n      console.log(\"Request failed to send\");\n    } else {\n      console.log(`Error: ${error.message}`);\n    }\n  }\n}\n\nexport async function getCourseInfo(courseId) {\n  try {\n    const { data } = await axios.get(`core/preview-courses/${courseId}`, {\n      headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n    });\n    return data;\n  } catch (error) {\n    if (error.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // The request was made but no response was received\n      // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n      // http.ClientRequest in node.js\n      console.log(error.request);\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      console.log(\"Error\", error.message);\n    }\n    console.log(error.config);\n  }\n}\n"],"names":["contentPerPage","count","useState","page","setPage","before","paginationGroup","after","gaps","setGaps","pageCount","Math","ceil","lastContentIndex","firstContentIndex","pagesInBetween","setPagesInBetween","useEffect","temp","Array","fill","map","_","i","currentLocation","indexOf","slice","changePage","direction","state","totalPages","nextPage","prevPage","num","ItemLink","styled","Link","Item","MetaWrapper","Title","PreTitle","Image","Rating","props","value","Container","List","Skills","skills","meta","el","index","itemData","location","useLocation","previewImageLink","title","lessonsCount","rating","id","to","from","src","alt","data","App","PaginationWrapper","Text","Button","ButtonActive","ButtonDisabled","setPeople","loading","setLoading","error","setError","usePagination","length","axios","onClick","localStorage","getItem","token","setToken","courses","setCourse","CoursesAPI","then","fetchToken","setItem","console","getCourses","headers","Authorization","response","log","status","request","message","getCourseInfo","courseId","config"],"sourceRoot":""}